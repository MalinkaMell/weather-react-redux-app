{"version":3,"sources":["components/body/Header.js","components/body/Body.js","components/button/Button.js","components/results/Results.js","components/input/Searchinput.js","components/search/Search.js","components/results/FiveDays.js","redux/index.js","App.js","index.js"],"names":["Header","props","className","title","Body","Container","Row","Col","md","Card","children","Button","onClick","handleSubmit","type","class","btnValue","Results","console","log","Object","keys","city","length","name","state","forecast","map","item","i","date","Date","toDateString","currentdate","key","Time","temprature","feels","to","SearchInput","Fragment","value","input","onChange","handleChange","placeholder","list","id","SearchContainer","FiveDaysResults","initialState","display","data","store","createStore","action","payload","subscribe","getState","App","searchItem","useSelector","dispatch","useDispatch","basename","process","exact","path","Search","e","target","preventDefault","displayData","States","findState","index","cities","toLowerCase","push","findCityIndex","cityIndex","parseInt","flat","toString","filter","time","FiveDays","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7f34e2df.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Header = props => {\r\n  return (\r\n    <div className=\"header\">\r\n      <h2>{props.title}</h2>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { Container, Row, Col, Card } from 'react-bootstrap';\r\nimport Header from './Header';\r\n\r\nconst Body = props => {\r\n  return (\r\n    <Container className=\"content\">\r\n      <Row className=\"justify-content-center\">\r\n        <Col md={8} className=\"text-center mt-3\">\r\n          <Card>\r\n            <Header title=\"Weather App\" />\r\n            {props.children}\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Body;","import React from 'react';\r\n\r\nconst Button = props => {\r\n  return (\r\n    <button\r\n      onClick={props.handleSubmit}\r\n      type={props.type}\r\n      className={props.class}>\r\n      {props.btnValue}\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default Button;","import React from 'react';\r\nimport Button from '../button/Button';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Results = props => {\r\n  \r\nconsole.log(props);\r\n\r\n  return (\r\n    Object.keys(props.city).length !== 0 ?\r\n    <div className=\"px-2 text-center\">\r\n      <h3 className=\"my-3\">{props.city.name}, {props.city.state}</h3>\r\n      <ul className=\"list-inline d-flex\">\r\n        {\r\n          props.city.forecast.map((item, i) => {\r\n            const date = new Date(item.Date).toDateString();\r\n            const today = new Date(props.city.currentdate).toDateString();\r\n            if (date === today) {\r\n              return (\r\n                <li className=\"list-inline-item flex-fill text-center results p-2\" key={i}>\r\n                  <p>{date}</p>\r\n                  <p>{item.Time}</p>\r\n                  <p>Temperature: {item.temprature}</p>\r\n                  <p>{item.temprature >= 60 ? <i className=\"fas fa-sun fa-2x\"></i> : <i className=\"fas fa-cloud fa-2x\"></i>}</p>\r\n                  <p>Feels: {item.feels}</p>\r\n                </li>\r\n              )\r\n            }\r\n          })\r\n        }\r\n      </ul>\r\n      <Link to=\"/fivedays\"><Button type=\"button\" btnValue=\"5 Day Weather\" class=\"btn btn-primary my-4\" /></Link>\r\n    </div> :\r\n    <h5 className=\"my-4\">Sorry, we don't have results for this city</h5>\r\n  )\r\n}\r\n\r\nexport default Results;","import React from 'react';\r\n\r\nconst SearchInput = props => {\r\n  return (\r\n    <React.Fragment>\r\n      <input\r\n        className=\"form-control\"\r\n        type={props.type}\r\n        value={props.input}\r\n        onChange={props.handleChange}\r\n        placeholder={props.placeholder}\r\n        list=\"cities\"\r\n      />\r\n      {/* Adding datalist for faster testing */}\r\n      <datalist id=\"cities\">\r\n        <option value=\"Chicago\" />\r\n        <option value=\"New York\" />\r\n        <option value=\"Los Angeles\" />\r\n      </datalist>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default SearchInput;","import React from 'react';\r\nimport Button from '../button/Button';\r\nimport SearchInput from '../input/Searchinput';\r\n\r\n\r\nconst SearchContainer = props => {\r\n  return (\r\n    <form className=\"w-100 px-2 mt-3\">\r\n      <div className=\"input-group mb-3\">\r\n        <SearchInput handleChange={props.handleChange} input={props.input} type=\"text\" placeholder=\"Enter City\" />\r\n        <div className=\"input-group-append\" >\r\n          <Button handleSubmit={props.handleSubmit} type=\"submit\" class=\"btn btn-primary\" btnValue=\"Search\" />\r\n        </div>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default SearchContainer;","import React from 'react';\r\nimport Button from '../button/Button';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst FiveDaysResults = props => {\r\n\r\n  return (\r\n    <div className=\"px-2 text-center\">\r\n      <h3 className=\"my-3\">{props.city.name}, {props.city.state}</h3>\r\n      <ul className=\"list-inline d-flex\">\r\n        {\r\n          props.city.forecast.map((item, i) => {\r\n            const date = new Date(item.Date).toDateString();\r\n\r\n            return (\r\n              <li className=\"list-inline-item flex-fill text-center results p-2\" key={i}>\r\n                <p>{date}</p>\r\n                <p>{item.Time}</p>\r\n                <p>Temperature: {item.temprature}</p>\r\n                <p>{item.temprature >= 60 ? <i className=\"fas fa-sun fa-2x\"></i> : <i className=\"fas fa-cloud fa-2x\"></i>}</p>\r\n                <p>Feels: {item.feels}</p>\r\n              </li>\r\n            )\r\n          })\r\n        }\r\n      </ul>\r\n      <Link to=\"/\"><Button type=\"button\" btnValue=\"Back\" class=\"btn btn-primary my-4\" /></Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FiveDaysResults;","import { createStore } from 'redux';\r\nimport weatherData from '../data.json';\r\n\r\n//state\r\nconst initialState = {\r\n  display: null,\r\n  input: \"\",\r\n  data: weatherData\r\n}\r\n\r\n//actions\r\n\r\nexport const inputItem = (item) => {\r\n  return {\r\n    type: \"INPUT_ITEM\",\r\n    payload: item\r\n  }\r\n}\r\n\r\nexport const addToDisplay = (item) => {\r\n  return {\r\n    type: \"ADD_TO_DISPLAY\",\r\n    payload: item\r\n  }\r\n}    \r\n\r\n//reducer\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"INPUT_ITEM\":\r\n      return { ...state, input: action.payload };\r\n    case \"ADD_TO_DISPLAY\":\r\n      return { ...state, display: action.payload, input: \"\" };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n\r\nconst store = createStore(reducer);\r\nstore.subscribe(() => {\r\n  console.log(store.getState())\r\n})\r\nexport default store;\r\n","import React from 'react';\nimport './App.css';\nimport Body from './components/body/Body';\nimport Results from './components/results/Results';\nimport SearchContainer from './components/search/Search';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport FiveDaysResults from './components/results/FiveDays';\n\nimport { addToDisplay, inputItem } from './redux';\nimport { useSelector, useDispatch } from 'react-redux';\n\n\nconst App = () => {\n\n  const searchItem = useSelector(state => state.input);\n  const data = useSelector(state => state.data);\n  const display = useSelector(state => state.display);\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    dispatch(inputItem(e.target.value))\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    //new object to contain extracted data \n    const displayData = {}\n\n    //shortening state for easier use\n    const state = data.States;\n\n    //find in what state is my searched city\n    const findState = Object.keys(state).map(key => {\n      const index = []\n      state[key].cities.map((city, i) => searchItem.toLowerCase() === city.name.toLowerCase() && index.push(key));\n      return index\n    })\n\n    //find city index\n    const findCityIndex = Object.keys(state).map(key => {\n      const index = []\n      state[key].cities.map((city, i) => searchItem.toLowerCase() === city.name.toLowerCase() && index.push(i));\n      return index\n    })\n\n    //flat \n    const cityIndex = parseInt(findCityIndex.flat().toString())\n\n    //saving state in diplay object\n    findState.flat().toString() !== \"\" && (displayData.state = findState.flat().toString())\n\n    //search data using saved state object and cityIndex and saving it\n    Object.keys(state).filter(key => {\n      if (key === displayData.state) {\n        displayData.name = state[key].cities[cityIndex].name\n        displayData.state = key\n        displayData.currentdate = state[key].currentdate\n        displayData.time = state[key].time\n        displayData.forecast = state[key].cities[cityIndex].forecast\n      }\n      return false\n    })\n\n    console.log(displayData)\n    //set new state\n    dispatch(addToDisplay(displayData))\n  }\n\n    return (\n      <Router basename={process.env.PUBLIC_URL}>\n        <Body>\n          <Switch>\n            <Route exact path=\"/\">\n              <SearchContainer handleChange={handleChange} handleSubmit={handleSubmit} input={searchItem} />\n              {display !== null && <Results city={display} />}\n            </Route>\n            <Route path=\"/fivedays\">\n              <FiveDaysResults city={display} />\n            </Route>\n          </Switch>\n        </Body>\n      </Router>\n    )\n  \n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}